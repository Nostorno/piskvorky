import os, random

os.system("cls")

hraci_seznam = []  # seznam hraci plochy
hraci_seznam_hodnoty = []  # seznam hodnot hraci plochy
game = True  # cyklus hry
prvni_kolo = False  # pro prvni kolo pocitace
nyni_hrac = 0  # maximalni dosazeny pocet hrace
nyni_pocitac = 1  # maximalni dosazeny pocet pc
tahy_hrace = []


def vytvoreni_seznamu():  # funkce seznamu plochy a hodnot
    for cislo in range(10):
        rada = ["‚¨úÔ∏è"] * 10
        hraci_seznam.append(rada)
    for cislo in range(10):
        rada = ["n"] * 10
        hraci_seznam_hodnoty.append(rada)


vytvoreni_seznamu()


def hraci_plocha():  # vypise hraci plochu
    for radek in range(10):
        for sloupec in range(10):
            if sloupec < 9:
                print(hraci_seznam[radek][sloupec], end="")
            elif sloupec == 9:
                print(hraci_seznam[radek][sloupec])


def hodnoty():  # vypise hodnoty hraci plochy
    for radek in range(0, 10):
        for sloupec in range(0, 10):
            if sloupec < 9:
                print(hraci_seznam_hodnoty[radek][sloupec], end="")
            elif sloupec == 9:
                print(hraci_seznam_hodnoty[radek][sloupec])


# zobrazeni herniho stavu
def informace(prvni_kolo, nyni_pocitac, nyni_hrac):
    print(f"Pc 1 kolo: {prvni_kolo}")
    print(f"Pc ma nyni: {nyni_pocitac} v rade.")
    print(f"Hrac ma nyni: {nyni_hrac} v rade.")
    return


def hrac():
    kontrola_souradnic = True
    while kontrola_souradnic:
        xy = input("zadej cislo sloupce 0-9 a radky 0-9:")
        if len(xy) != 2:
            print("hodnota neobsahuje dve osy! hraj znovu! " + str(xy))
            kontrola_souradnic = True
        else:
            x = int(xy[0])
            y = int(xy[1])
            tah = hraci_seznam_hodnoty[y][x]
            if tah == "z" or tah == "c":
                print("policko je jiz obsazene!")
                kontrola_souradnic = True
            elif tah == "n":
                hraci_seznam[y][x] = "üü©"
                hraci_seznam_hodnoty[y][x] = "z"
                kontrola_souradnic = False
                hraci_plocha()
    return


def vyhodnoceni(nyni_pocitac, nyni_hrac):
    kombinace = []
    for radky in range(10):  # kombinace radky
        jedna_kombinace = "".join(hraci_seznam_hodnoty[radky][0:10])
        jedna_kombinace = "x" + jedna_kombinace + "x"
        kombinace.append(jedna_kombinace)
    for sloupce in range(10):  # kombinace sloupce
        jedna_kombinace = "".join([seznam[sloupce] for seznam in hraci_seznam_hodnoty])
        jedna_kombinace = "x" + jedna_kombinace + "x"
        kombinace.append(jedna_kombinace)
    jedna_kombinace = ""

    for y in range(4, 10):  # kombinace diagonalni cast 1
        for x in range(y, -1, -1):
            jedna_kombinace += hraci_seznam_hodnoty[x][y - x]
        jedna_kombinace = "x" + jedna_kombinace + "x"
        kombinace.append(jedna_kombinace)
        jedna_kombinace = ""

    for y in range(5):  # kombinace diagonalni cast 2
        for x in range(9, 4 - y, -1):
            jedna_kombinace += hraci_seznam_hodnoty[x][9 - x + 5 - y]
        jedna_kombinace = "x" + jedna_kombinace + "x"
        kombinace.append(jedna_kombinace)
        jedna_kombinace = ""

    for y in range(6):  # kombinace diagonalni cast 3
        pomocna_p = 0
        for x in range(0 + y, 10):
            jedna_kombinace += hraci_seznam_hodnoty[x][pomocna_p]
            pomocna_p += 1
        jedna_kombinace = "x" + jedna_kombinace + "x"
        kombinace.append(jedna_kombinace)
        jedna_kombinace = ""

    pomocna_p = 6  #  kombinace diagonalni cast 4
    for y in range(5):
        pomocna_p -= 1
        for x in range(5 + y):
            jedna_kombinace += hraci_seznam_hodnoty[x][pomocna_p + x]
        jedna_kombinace = "x" + jedna_kombinace + "x"
        kombinace.append(jedna_kombinace)
        jedna_kombinace = ""

    for seznam in kombinace:
        if (
            "cc" in seznam
            and nyni_pocitac < 2
            and "zccz" not in seznam
            and "zcccz" not in seznam
            and "zccccz" not in seznam
            and "xccccz" not in seznam
            and "zccccx" not in seznam
            and "zncccz" not in seznam
            and "zcccnz" not in seznam
            and "xncccz" not in seznam
            and "zcccnx" not in seznam
            and "znnccz" not in seznam
            and "zccnnz" not in seznam
            and "xnnccz" not in seznam
            and "zccnnx" not in seznam
            and "xcnccz" not in seznam
            and "zccncx" not in seznam
        ):
            nyni_pocitac = 2
        elif (
            "ccc" in seznam
            and nyni_pocitac < 3
            and "zcccz" not in seznam
            and "zccccz" not in seznam
            and "xccccz" not in seznam
            and "zccccx" not in seznam
            and "zncccz" not in seznam
            and "zcccnz" not in seznam
            and "xncccz" not in seznam
            and "zcccnx" not in seznam
        ):
            nyni_pocitac = 3
        elif (
            "cccc" in seznam
            and nyni_pocitac < 4
            and "zccccz" not in seznam
            and "xccccz" not in seznam
            and "zccccx" not in seznam
        ):
            nyni_pocitac = 4
        elif "ccccc" in seznam:
            nyni_pocitac = 5

        if "zzzzz" in seznam and nyni_hrac < 5:
            nyni_hrac = 5
        elif "zzzz" in seznam and nyni_hrac < 4:
            nyni_hrac = 4
        elif "zzz" in seznam and nyni_hrac < 3:
            nyni_hrac = 3
        elif "zz" in seznam and nyni_hrac < 2:
            nyni_hrac = 2
        elif "z" in seznam and nyni_hrac < 1:
            nyni_hrac = 1

    return nyni_pocitac, nyni_hrac


def pocitac(prvni_kolo, nyni_pocitac, nyni_hrac):
    pocitac_odehral = False  # zda PC odehral
    nenalezeno = 0  # pocet opakovani v pripade nevhodneho tahu
    while not pocitac_odehral:  # hlavni smycka
        if prvni_kolo == False:  # podminka pro prvni tah PC
            pc_x = random.randint(4, 5)
            pc_y = random.randint(4, 5)
            prvni_kolo = True
            hraci_seznam[pc_y][pc_x] = "üü•"
            hraci_seznam_hodnoty[pc_y][pc_x] = "c"
            os.system("cls")
            hodnoty()
            hraci_plocha()
            pocitac_odehral = True

        else:  # dalsi kola
            pc_x = random.randint(0, 9)
            pc_y = random.randint(0, 9)
            souradnice = str(pc_x) + str(pc_y)
            pc_tah = hraci_seznam_hodnoty[pc_y][pc_x]
            if pc_tah == "n":  # kontrola zda je pole volne
                hraci_seznam[pc_y][pc_x] = "üü•"
                hraci_seznam_hodnoty[pc_y][pc_x] = "c"
                pc_uktualne = nyni_pocitac  # ulozeni aktualniho stavu PC
                nyni_pocitac, nyni_hrac = vyhodnoceni(nyni_pocitac, nyni_hrac)

                if nyni_pocitac > pc_uktualne:  # tah je vhodny
                    # if pc_tah in tahy_hrace:
                    os.system("cls")
                    hraci_plocha()
                    pocitac_odehral = True
                    nenalezeno = 0
                    print(tahy_hrace)

                else:  # tah je nevhodny, bude generovat novou pozici
                    # 500 moznosti pak snizeni radu o 1
                    hraci_seznam[pc_y][pc_x] = "‚¨úÔ∏è"
                    hraci_seznam_hodnoty[pc_y][pc_x] = "n"
                    nenalezeno += 1
                    print(nenalezeno)
                    if nenalezeno > 500:
                        nenalezeno = 0
                        nyni_pocitac -= 1
            else:  # kdyz je pole obsazene
                nenalezeno += 1

    return prvni_kolo, nyni_pocitac, nyni_hrac


def pocitac_hrac(nyni_hrac, nyni_pocitac):  # hleda vhodne pole hrace
    hledani_tahu_pc = nyni_hrac
    if nyni_hrac >= 1:
        for hledani in range(200):
            pc_x = random.randint(0, 9)
            pc_y = random.randint(0, 9)
            pc_tah = hraci_seznam_hodnoty[pc_y][pc_x]
            if pc_tah == "n":
                hraci_seznam_hodnoty[pc_y][pc_x] = "z"
                nyni_pocitac, nyni_hrac = vyhodnoceni(nyni_pocitac, nyni_hrac)
                hraci_seznam_hodnoty[pc_y][pc_x] = "n"
                if nyni_hrac > hledani_tahu_pc:
                    souradnice_hrace = str(pc_x) + str(pc_y)
                    tahy_hrace.append(souradnice_hrace)

            nyni_hrac = hledani_tahu_pc
    return nyni_hrac, nyni_pocitac


while game:
    nyni_hrac, nyni_pocitac = pocitac_hrac(nyni_hrac, nyni_pocitac)
    prvni_kolo, nyni_pocitac, nyni_hrac = pocitac(prvni_kolo, nyni_pocitac, nyni_hrac)
    tahy_hrace = []
    nyni_pocitac, nyni_hrac = vyhodnoceni(nyni_pocitac, nyni_hrac)
    informace(prvni_kolo, nyni_pocitac, nyni_hrac)
    if nyni_pocitac == 5:
        print("Pc vyhral!")
        break
    hrac()
    nyni_pocitac, nyni_hrac = vyhodnoceni(nyni_pocitac, nyni_hrac)
    if nyni_hrac == 5:
        print("Vyhral jsi!")
        break
